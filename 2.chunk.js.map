{"version":3,"sources":["webpack:///./src/apps/achievements/Achievement/Drawer/Drawer.jsx","webpack:///./src/apps/achievements/Achievement/Layout/ProgressBar.jsx","webpack:///./src/apps/achievements/Achievement/index.js","webpack:///./src/apps/achievements/Achievement/Layout/index.js","webpack:///./src/apps/achievements/Achievement/Layout/Card.jsx","webpack:///./src/apps/achievements/Achievement/Layout/Content.jsx","webpack:///./src/apps/achievements/state/events/index.js","webpack:///./src/apps/achievements/state/achievements/index.js","webpack:///./src/apps/achievements/state/notifications/index.js","webpack:///./src/common/not-redux/index.js","webpack:///./src/apps/achievements/state/index.js","webpack:///./src/apps/achievements/Achievements/ClickingForCookies.jsx","webpack:///./src/apps/achievements/Achievements/StayinAlive.jsx","webpack:///./src/apps/achievements/Achievements/WebCrawler.jsx","webpack:///./src/apps/achievements/Achievements/index.js","webpack:///./src/apps/achievements/Achievements/UnlockAchievements.jsx","webpack:///./src/common/developer/DeveloperModeOnly.jsx","webpack:///./src/common/developer/JSONView.jsx","webpack:///./src/apps/achievements/AppStateView/AppStateView.jsx","webpack:///./src/apps/achievements/EventListener.jsx","webpack:///./src/apps/achievements/Notifier/Notification.jsx","webpack:///./src/apps/achievements/Notifier/Notifier.jsx","webpack:///./src/apps/achievements/PersistState.jsx","webpack:///./src/apps/achievements/App.jsx","webpack:///./src/apps/achievements/index.js","webpack:///./src/apps/achievements/AppStateView/AppStateView.css?9adc","webpack:///./src/apps/achievements/AppStateView/AppStateView.css","webpack:///./src/apps/achievements/Notifier/Notification.css?9aa5","webpack:///./src/apps/achievements/Notifier/Notification.css","webpack:///./src/apps/achievements/Achievement/Drawer/Drawer.css?04b2","webpack:///./src/apps/achievements/Achievement/Drawer/Drawer.css"],"names":["cx","classNames","bind","styles","ProgressBar","Drawer","children","className","initialState","style","open","setOpen","React","useState","aria-pressed","onClick","onKeyDown","e","which","role","tabIndex","Layout","Card","backgroundColor","display","flex","flexDirection","height","justifyContent","margin","width","Content","padding","color","progress","Math","min","floor","transition","TICK","ticks","state","IDS","CLICKING_FOR_COOKIES","STAYIN_ALIVE","UNLOCK_ACHIEVEMENTS","WEB_CRAWLER","achieved","id","type","payload","reducer","action","when","Date","now","isAchieved","unlockAchievementsProgress","ENQUEUE","notify","Error","message","REMOVE","DEQUEUE","RESET","DEFAULT_STATE","slice","concat","filter","notification","NotRedux","createContext","key","dispatch","console","warn","_reducerRegistry","achievements","clicks","keydowns","char","notifications","subStateChanged","subStateDiff","r","subState","nextSubState","AppState","useAppState","useContext","ClickingForCookies","ACHIEVEMENT_ID","useEffect","Achievement","ACHIEVEMENT_CODE","String","fromCharCode","matches","a","b","valid","code","index","WebCrawler","StayinAlive","setProgress","keys","length","longestMatch","i","num","calcLongestMatch","UnlockAchievements","DeveloperModeOnly","JSONView","data","JSON","stringify","AppStateView","dynamicClasses","EventListener","click","target","getAttribute","window","addEventListener","removeEventListener","eventMap","events","keydown","eventListener","eventName","tickIntervalId","setInterval","clearInterval","classNamesBinder","Notification","onClose","Notifier","args","remove","PersistState","interval","localStorage","App","parse","err","useReducer","unlockAchievements","clickingForCookiesAchieved","Provider","value","href","rel","title","alt","src","position","right","top","zIndex","bottom","left","visibility","Achievements","main","rootId","root","document","getElementById","createElement","body","appendChild","ReactDOM","render","content","module","options","locals","exports","push"],"mappings":"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","file":"2.chunk.js","sourcesContent":["import classNames from 'classnames/bind'\nimport React from 'react'\nimport {childrenType, classNamesType, styleType} from 'common/types'\n\nimport styles from './Drawer.css'\n\nconst cx = classNames.bind(styles)\n\ntype Props = {\n  /** Styling via className */\n  className: classNamesType,\n  /** Customized content of the drawer. */\n  children?: childrenType,\n  /** open (true) or closed (false) */\n  initialState?: boolean,\n  /** CSS style override. */\n  style?: styleType,\n}\n\nexport const Drawer = ({\n  children,\n  className = '',\n  initialState = false,\n  style = {},\n}: Props = {}) => {\n  const [open, setOpen] = React.useState(initialState)\n\n  return (\n    <div className={cx('container', {open}, className)} style={style}>\n      <div className={cx('content', {open})}>\n        {children}\n      </div>\n      <div\n        aria-pressed='false'\n        className={cx('button', {open})}\n        onClick={() => setOpen(!open)}\n        onKeyDown={(e) => (e.which === 32 || e.which === 13) && setOpen(!open)}\n        role='button'\n        tabIndex='0'\n      >\n        {open ? <span>-</span> : <span>+</span>}\n      </div>\n    </div>\n  )\n}\n\nexport default Drawer\n","// @flow\nimport React from 'react'\n\ntype Props = {\n  /** Fill color of the progress bar. */\n  color?: string,\n  /** Value between 0 and 1.0 */\n  progress?: number,\n  /** CSS style override. */\n  style?: any,\n}\n\n//\n// Render a progress bar.\nexport const ProgressBar = ({\n  color = 'rgb(121,121,121)',\n  progress = 0,\n  style = {}\n}: Props = {}) => (\n  <div\n    style={{\n      backgroundColor: color,\n      height: '0.5rem',\n      width: `${Math.min(100, Math.floor(progress * 100))}%`,\n      transition: 'all 0.5s',\n      ...style,\n    }}\n  />\n)\n\nexport default ProgressBar\n","import Drawer from './Drawer'\nimport Layout from './Layout'\n\nexport default {\n  Drawer,\n  Layout,\n}\n","import Card from './Card'\nimport Content from './Content'\nimport ProgressBar from './ProgressBar'\n\nexport {Card, Content, ProgressBar}\n\nexport default {\n  Card,\n  Content,\n  ProgressBar,\n}\n","// @flow\nimport React from 'react'\nimport {childrenType, styleType} from 'common/types'\n\ntype Props = {\n  /** Content of the card. */\n  children?: childrenType,\n  /** CSS style override. */\n  style?: styleType,\n}\n\n// Contain the chievements in their normal card view.\nexport const Card = ({\n  children,\n  style = {},\n}: Props = {}) => (\n  <div\n    style={{\n      backgroundColor: 'rgb(240,240,240)',\n      display: 'flex',\n      // Prevent cards from being squished by flex container.\n      flex: '0 0 auto',\n      flexDirection: 'column',\n      height: '8.5rem',\n      justifyContent: 'space-between',\n      margin: '0.3rem',\n      width: '13.8rem',\n      ...style,\n    }}\n  >\n    {children}\n  </div>\n)\n\nexport default Card\n","// @flow\nimport React from 'react'\nimport {childrenType, styleType} from 'common/types'\n\ntype Props = {\n  /** Content of the card. */\n  children?: childrenType,\n  /** CSS style override. */\n  style?: styleType,\n}\n\n// Contain the chievements in their normal card view.\nexport const Content = ({\n  children,\n  style = {},\n}: Props = {}) => (\n  <div\n    style={{\n      padding: '0.5rem',\n      width: '100%',\n      ...style,\n    }}\n  >\n    {children}\n  </div>\n)\n\nexport default Content\n","import _ from 'lodash'\n\nexport const REDUCER_KEY = 'events'\n\nexport const IDS = {\n  UNLOCK_ACHIEVEMENTS: 'unlock-achievements',\n  STAYIN_ALIVE: 'stayin-alive'\n}\n\nexport const CLICK = 'jo/events/click'\nexport const click = (e) => ({\n  type: CLICK,\n  payload: e || {}\n})\n\nexport const KEY_DOWN = 'jo/events/key-down'\nexport const keyDown = (e) => ({\n  type: KEY_DOWN,\n  payload: {\n    code: e.which,\n    char: String.fromCharCode(e.which)\n  }\n})\n\nexport const RESET = 'jo/events/reset'\nexport const reset = () => ({\n  type: RESET\n})\n\nexport const TICK = 'jo/events/tick'\nexport const tick = () => ({\n  type: TICK\n})\n\nexport const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case CLICK:\n      return {\n        ...state,\n        clicks: (state.clicks || 0) + 1\n      }\n    case KEY_DOWN:\n      return {\n        ...state,\n        keydowns: _.takeRight([...(state.keydowns || []), action.payload.char], 15),\n      }\n    case RESET:\n      return {}\n    case TICK:\n      return {\n        ...state,\n        ticks: (state.ticks || 0) + 1\n      }\n    default:\n      return state\n  }\n}\n\n//\n// Selectors\n//\n// Ticks are used throughout, allow access as a number at all times.\nexport const ticks = (state: any): number => _.get(state, 'events.ticks', 0)\n","// @flow\nimport {ticks} from '../events'\nimport _ from 'lodash'\n\nexport const REDUCER_KEY = 'achievements'\n\nexport const IDS = {\n  CLICKING_FOR_COOKIES: 'clicking-for-cookies',\n  STAYIN_ALIVE: 'stayin-alive',\n  UNLOCK_ACHIEVEMENTS: 'unlock-achievements',\n  WEB_CRAWLER: 'web-crawler',\n}\n\nexport const ACHIEVEMENTS_ACHIEVED = 'jo/achievements/achieved'\nexport const achieved = (id: string) => {\n  return {\n    type: ACHIEVEMENTS_ACHIEVED,\n    payload: {\n      id,\n    },\n  }\n}\n\nexport const reducer = (state: any = {}, action: any) => {\n  switch (action.type) {\n    case ACHIEVEMENTS_ACHIEVED:\n      return {\n        ...state,\n        [action.payload.id]: {\n          when: Date.now(),\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n\n//\n// Selectors\n//\n\n/**\n * Whether a particular achievement been reported as having been completed or\n * not.\n *\n * `id` can be the actual achievement id or can be a key look up into the\n * achievements `IDS` structure.\n */\nexport const isAchieved = (state: any, id: string): boolean => !!_.get(state, `${REDUCER_KEY}.${IDS[id] || id}`)\n\n//\n// Unlocking the achievements makes other achievements available and visible.\n// Provide extra helpers for other parts of the app that need to check on the\n// status of unlocked achievements.\n//\n// How many ticks before the achievements are officially unlocked?\nexport const UNLOCK_ACHIEVEMENT_REQUIRED_TICKS = 7\n//\n// 0 not done, 1 done, anything in between progress.\nexport const unlockAchievementsProgress = (state: any): number => _.floor(ticks(state) / UNLOCK_ACHIEVEMENT_REQUIRED_TICKS, 2)\n","export const REDUCER_KEY = 'notifications'\n\n/**\n * Add a new notification to the end of the notification queue.\n * See: notify\n */\nexport const ENQUEUE = `jo/${REDUCER_KEY}/enqueue`\nexport function enqueue (payload) {\n  if (payload instanceof Error) {\n    // Basic JavaScript errors roughly conform to our needs.\n    payload = {\n      message: payload.message,\n      // explicit typing in our notifications, because someday we might have\n      // error subtleties / error codes so don't assume that an error object\n      // always means just isError.\n      type: 'error',\n    }\n  } else if (typeof payload === 'string') {\n    // Assume it is a string or UI-ish component meant to be displayed as is.\n    payload = {\n      message: payload,\n      // other fields on the notification object are extensible and dependent\n      // on the UI handling the notification object.\n    }\n  }\n  return {\n    type: ENQUEUE,\n    payload,\n  }\n}\n\n/**\n * Add a notification to the end of the queue of notifications.\n *\n * The payload is assumed to be:\n *\n * {\n *    message: {String} passed through to the UI.,\n *    type: {['info'|'error']='info'} type of notification, assumed to affect styling of UI.\n * }\n *\n * @param {Object|String|Error} payload\n * @return {Object} Flux Standard Action\n */\nexport const notify = enqueue\n\n/**\n * Remove a specific item, and all references to it, from the queue.\n *\n * @return {Object} Flux Standard Action\n */\nexport const REMOVE = `jo/${REDUCER_KEY}/remove`\nexport function remove (payload) {\n  return {type: REMOVE, payload}\n}\n\n/**\n * Remove one item from the head of the queue.\n *\n * @return Flux standard Action\n */\nexport const DEQUEUE = `jo/${REDUCER_KEY}/dequeue`\nexport function dequeue (payload) {\n  return {type: DEQUEUE}\n}\n\n/**\n * Return the queue to the default state.\n *\n * @return Flux Standard Action\n */\nexport const RESET = `jo/${REDUCER_KEY}/reset`\nexport function reset (payload) {\n  return {type: RESET}\n}\n\nconst DEFAULT_STATE = []\n\nexport function reducer (state = DEFAULT_STATE, action = {}) {\n  switch (action.type) {\n    case DEQUEUE:\n      return state.slice(1)\n    case ENQUEUE:\n      return state.concat(action.payload)\n    case REMOVE:\n      return state.filter((notification) => notification !== action.payload)\n    case RESET:\n      return DEFAULT_STATE\n    default:\n      return state\n  }\n}\nexport default reducer\n","import React from 'react'\n\nexport const notReduxState = {\n  key: 'something something something in the month of may',\n}\n\nexport const NotRedux = React.createContext({\n  state: notReduxState,\n  dispatch: () => console.warn('non-initialized dispatch being called')\n})\n\n// By default export the context, which is what people want.\n// Not a horrid expectation given `import React from 'react'`.\nexport default NotRedux\n","import * as achievements from './achievements'\nimport * as events from './events'\nimport * as notifications from './notifications'\nimport {NotRedux} from 'common/not-redux'\nimport _ from 'lodash'\nimport React from 'react'\n\n// All sub-state reducers must be added here.\nconst _reducerRegistry = {\n  [achievements.REDUCER_KEY]: achievements.reducer,\n  [events.REDUCER_KEY]: events.reducer,\n  [notifications.REDUCER_KEY]: notifications.reducer,\n}\n\nexport const reducer = (state, action) => {\n  // Root reducer specialties\n  switch (action.type) {\n    case 'reset':\n      return {}\n    case 'set':\n      return state.payload\n    default:\n      break\n  }\n\n  let subStateChanged = false\n  const subStateDiff = {}\n  _.forIn(_reducerRegistry, (r, key) => {\n    const subState = _.get(state, key) // || undefined as states can be more than objects\n    const nextSubState = r(subState, action)\n    if (nextSubState !== subState) {\n      subStateChanged = true\n      subStateDiff[key] = nextSubState\n    }\n  })\n\n  if (subStateChanged) {\n    state = {\n      ...state,\n      ...subStateDiff,\n    }\n  }\n\n  return state\n}\n\nexport default reducer\n\nexport const AppState = NotRedux\n\nexport const useAppState = () => React.useContext(AppState)\n","import Achievement from 'achievements/Achievement'\nimport {useAppState} from 'achievements/state'\nimport * as achievements from 'achievements/state/achievements'\nimport {notify} from 'achievements/state/notifications'\nimport _ from 'lodash'\nimport React from 'react'\n\n// Work for this one, sort of ;)\nexport const NUM_CLICKS_FOR_THAT_COOKIE = 200\n\nexport const ClickingForCookies = () => {\n  const {dispatch, state} = useAppState()\n  const ACHIEVEMENT_ID = achievements.IDS.CLICKING_FOR_COOKIES\n\n  const achieved = achievements.isAchieved(state, ACHIEVEMENT_ID)\n  const clicks = _.get(state, 'events.clicks') || 0\n  const progress = _.floor(clicks / NUM_CLICKS_FOR_THAT_COOKIE, 2)\n\n  React.useEffect(() => {\n    if (achieved) {\n      return\n    }\n\n    if (progress >= 1) {\n      dispatch(achievements.achieved(ACHIEVEMENT_ID))\n      dispatch(notify('Achievement unlocked: Clicking for Cookies! (Have a cookie, you deserve it.)'))\n    }\n  }, [ACHIEVEMENT_ID, achieved, dispatch, progress])\n\n  return (\n    <Achievement.Layout.Card>\n      <Achievement.Layout.Content>\n        {\n          achieved ?\n            <div>Clicking for Cookies unlocked! (And this one doesn't need a banner.)</div>\n            :\n            <div>Cookies aren't just for eating or tracking...{progress >= 0.3 ? ' I believe in you!' : ''} {progress >= 0.7 ? ' Almost there!' : ''}</div>\n        }\n      </Achievement.Layout.Content>\n      <Achievement.Layout.ProgressBar progress={progress} />\n    </Achievement.Layout.Card>\n  )\n}\n\nexport default ClickingForCookies\n","import Achievement from 'achievements/Achievement'\nimport {useAppState} from 'achievements/state'\nimport * as achievements from 'achievements/state/achievements'\nimport {notify} from 'achievements/state/notifications'\nimport _ from 'lodash'\nimport React from 'react'\n\nexport const ACHIEVEMENT_CODE = [\n  String.fromCharCode(38), // up\n  String.fromCharCode(38), // up\n  String.fromCharCode(40), // down\n  String.fromCharCode(40), // down\n  String.fromCharCode(37), // left\n  String.fromCharCode(39), // right\n  String.fromCharCode(37), // left\n  String.fromCharCode(39), // right\n  'B',\n  'A'\n]\n\n// Calculate progress of the string dependent on the longest correct sequence\n// of keys from the end of the input keys.\nconst matches = (a, b) => {\n  let matches = 0\n  let valid = true\n  _.forEach(a, (code, index) => {\n    if (!valid) {\n      return\n    }\n    if (code === b[index]) {\n      matches += 1\n    } else {\n      valid = false\n    }\n  })\n  return valid ? matches : false\n}\n\nconst calcLongestMatch = (a, b) => {\n  let longestMatch = 0\n  const size = Math.min(a.length, b.length)\n  for (let i = size; i > 0; i--) {\n    const num = matches(_.take(a, i), _.takeRight(b, i))\n    if (num) {\n      longestMatch = num\n      break\n    }\n  }\n  return longestMatch\n}\n\nexport const StayinAlive = () => {\n  const {dispatch, state} = useAppState()\n  const [progress, setProgress] = React.useState(0)\n  const ACHIEVEMENT_ID = achievements.IDS.STAYIN_ALIVE\n\n  const achieved = _.get(state, `achievements.${ACHIEVEMENT_ID}`) || false\n  const keys = _.takeRight(_.get(state, 'events.keydowns') || [], ACHIEVEMENT_CODE.length)\n\n  React.useEffect(() => {\n    if (achieved) {\n      return\n    }\n\n    const progress = _.floor(calcLongestMatch(ACHIEVEMENT_CODE, keys) / ACHIEVEMENT_CODE.length, 2)\n    setProgress(progress)\n\n    if (progress === 1) {\n      dispatch(achievements.achieved(ACHIEVEMENT_ID))\n      dispatch(notify('Achievement unlocked: Stayin\\' Alive'))\n    }\n  }, [ACHIEVEMENT_ID, achieved, dispatch, keys])\n\n  return (\n    <Achievement.Layout.Card>\n      <Achievement.Layout.Content>\n        {achieved ? <div>Stayin' Alive (with cheat codes) unlocked!</div> : <div>You know the code...</div>}\n      </Achievement.Layout.Content>\n      <Achievement.Layout.ProgressBar progress={progress} />\n    </Achievement.Layout.Card>\n  )\n}\n\nexport default StayinAlive\n","import Achievement from 'achievements/Achievement'\nimport {useAppState} from 'achievements/state'\nimport * as achievements from 'achievements/state/achievements'\nimport React from 'react'\n\n//\n// Did you click a link?\n//\n// This achievement will likely be triggered before the waiting.\n//\nexport const WebCrawler = () => {\n  const {state} = useAppState()\n\n  const ACHIEVEMENT_ID = achievements.IDS.WEB_CRAWLER\n  // This achievement is either achieved or not and conditions for achievement\n  // success is handled in the EventListener since our NotRedux doesn't have\n  // middleware.\n  const achieved = achievements.isAchieved(state, ACHIEVEMENT_ID)\n  const progress = achieved ? 1 : 0\n\n  return (\n    <Achievement.Layout.Card>\n      <Achievement.Layout.Content>\n        {achieved ? <div>Web Crawler unlocked!</div> : <div>What would the web crawler do?</div>}\n      </Achievement.Layout.Content>\n      <Achievement.Layout.ProgressBar progress={progress} />\n    </Achievement.Layout.Card>\n  )\n}\n\nexport default WebCrawler\n","import ClickingForCookies from './ClickingForCookies'\nimport StayinAlive from './StayinAlive'\nimport UnlockAchievements from './UnlockAchievements'\nimport WebCrawler from './WebCrawler'\n\nexport default {\n  ClickingForCookies,\n  StayinAlive,\n  UnlockAchievements,\n  WebCrawler,\n}\n","import Achievement from 'achievements/Achievement'\nimport {useAppState} from 'achievements/state'\nimport * as achievements from 'achievements/state/achievements'\nimport {notify} from 'achievements/state/notifications'\nimport React from 'react'\n\nexport const UnlockAchievements = () => {\n  const {dispatch, state} = useAppState()\n\n  const ACHIEVEMENT_ID = achievements.IDS.UNLOCK_ACHIEVEMENTS\n  const achieved = achievements.isAchieved(state, ACHIEVEMENT_ID) || false\n  // Cap progress at 1 since we display it.\n  const progress = achievements.unlockAchievementsProgress(state)\n\n  React.useEffect(() => {\n    if (achieved) {\n      return\n    }\n\n    if (progress >= 1) {\n      dispatch(achievements.achieved(ACHIEVEMENT_ID))\n      dispatch(notify('Achievements unlocked! Maybe you can find more achievements?'))\n    }\n  }, [ACHIEVEMENT_ID, achieved, dispatch, progress])\n\n  return (\n    <Achievement.Layout.Card>\n      <Achievement.Layout.Content>\n        {achieved ? <div>Unlock Achievements unlocked!</div> : <div>Wait for it...</div>}\n      </Achievement.Layout.Content>\n      <Achievement.Layout.ProgressBar progress={progress} />\n    </Achievement.Layout.Card>\n  )\n}\n\nexport default UnlockAchievements\n","import React from 'react'\n\ntype Props = {\n  /** Content to show when in developer mode. */\n  children?: React.node,\n}\n\n// Take an object, seralize it, and show it in all its dataful glory.\nexport const DeveloperModeOnly = ({\n  children,\n}: Props = {}) => {\n  return (\n    process.env.NODE_ENV === 'development' ?\n      children\n      :\n      null\n  )\n}\n\nexport default DeveloperModeOnly\n","import classNames from 'classnames'\nimport {classNamesType, styleType} from 'common/types'\nimport React from 'react'\n\ntype Props = {\n  className?: classNamesType,\n  // The JavaScript object to serialize and view.\n  data?: any,\n  style?: styleType,\n}\n\n// Take an object, seralize it, and show it in all its dataful glory.\nexport const JSONView = ({\n  className = '',\n  data = {},\n  style = {},\n}: Props = {}) => {\n  return (\n    <pre className={classNames(className)} style={style}>\n      {JSON.stringify(data, null, 4)}\n    </pre>\n  )\n}\n\nexport default JSONView\n","import classNames from 'classnames/bind'\nimport {useAppState} from 'achievements/state'\nimport {DeveloperModeOnly, JSONView} from 'common/developer'\nimport React from 'react'\n\nimport styles from './AppStateView.css'\n\nconst cx = classNames.bind(styles)\n\n// Debug view. Hidden from production builds.\nexport const AppStateView = () => {\n  const {state} = useAppState()\n  const [open, setOpen] = React.useState(false)\n  const dynamicClasses = {open}\n\n  return (\n    <DeveloperModeOnly>\n      <div className={cx('container', dynamicClasses)}>\n        {\n          open ?\n            <>\n              <div>\n                <button type='button' onClick={() => setOpen(!open)}>hide state</button>\n              </div>\n              <JSONView data={state} />\n            </>\n            :\n            <button type='button' onClick={() => setOpen(!open)}>show state</button>\n        }\n      </div>\n    </DeveloperModeOnly>\n  )\n}\n\nexport default AppStateView\n","import {useAppState} from 'achievements/state'\nimport * as achievements from 'achievements/state/achievements'\nimport * as events from 'achievements/state/events'\nimport {notify} from 'achievements/state/notifications'\nimport _ from 'lodash'\nimport React from 'react'\n\n//\n// Non-visual component that listens for events we care about and publishes\n// NotRedux actions.\n//\nexport const EventListener = () => {\n  const {state, dispatch} = useAppState()\n\n  // Isolate the the WebCrawler achievment handling.\n  // Also, we are handling this achievement here vs. in the controller vs.\n  // lack of middleware.\n  React.useEffect(() => {\n    const click = (e) => {\n      const ACHIEVEMENT_ID = achievements.IDS.WEB_CRAWLER\n      const isWebCrawlerCandidate = e.target.getAttribute('data-app') === 'social-link'\n      if (isWebCrawlerCandidate) {\n        // Have we already achieved web crawler?\n        if (!achievements.isAchieved(state, ACHIEVEMENT_ID)) {\n          dispatch(achievements.achieved(ACHIEVEMENT_ID))\n          dispatch(notify('Achievement unlocked: Yes, that is what the web crawler would do.'))\n        }\n      }\n    }\n    window.addEventListener('click', click, false)\n\n    return () => {\n      window.removeEventListener('click', click, false)\n    }\n  }, [state, dispatch])\n\n  React.useEffect(() => {\n    const eventMap = {\n      click: (e) => dispatch(events.click(e)),\n      keydown: (e) => dispatch(events.keyDown(e)),\n    }\n\n    _.forEach(eventMap, (eventListener, eventName) => {\n      window.addEventListener(eventName, eventListener, false)\n    })\n\n    // Ticks need a regular interval.\n    const tickIntervalId = setInterval(() => {\n      dispatch(events.tick())\n    }, 1000)\n\n    // Specify how to clean up after this effect:\n    return () => {\n      _.forEach(eventMap, (eventListener, eventName) => {\n        window.removeEventListener(eventName, eventListener, false)\n      })\n      clearInterval(tickIntervalId)\n    }\n  }, [dispatch]) // Only run on mount and dismount.\n\n  return (\n    <div />\n  )\n}\n\nexport default EventListener\n","import classNamesBinder from 'classnames/bind'\nimport {classNamesType, notificationType, styleType} from 'common/types'\nimport _ from 'lodash'\nimport React from 'react'\n\nimport styles from './Notification.css'\n\nconst cx = classNamesBinder.bind(styles)\n\ntype Props = {\n  /** Additional styling. */\n  className?: classNamesType,\n  /** message to display */\n  notification: notificationType,\n  onClose: (n: notificationType) => void,\n  /** CSS style override. */\n  style?: styleType,\n}\n\n// Always visible. Control whether this should be shown or not in containing elements.\nexport const Notification = ({\n  className = '',\n  notification,\n  onClose,\n  style = {},\n}: Props = {}) => {\n  return (\n    <div className={cx('notification', _.get(notification, 'type', 'info'), className)} style={style}>\n      <div className={cx('message')}>{_.get(notification, 'message')}</div>\n      <button className={cx('close')} onClick={() => onClose(notification)}>Close</button>\n    </div>\n  )\n}\n\nexport default Notification\n","import {useAppState} from 'achievements/state'\nimport {remove} from 'achievements/state/notifications'\nimport _ from 'lodash'\nimport Notification from './Notification.jsx'\nimport React from 'react'\n\nexport const Notifier = () => {\n  const {state, dispatch} = useAppState()\n\n  const notification = _.get(state, 'notifications[0]')\n\n  return (\n    notification\n      ? <Notification notification={notification} onClose={(...args) => dispatch(remove(...args))} />\n      : null\n  )\n}\n\nexport default Notifier\n","// @flow\nimport {useAppState} from 'achievements/state'\nimport * as events from 'achievements/state/events'\nimport React from 'react'\n\ntype Props = {\n  // Save will be made every N ticks.\n  interval?: number,\n}\n\n//\n// Non-visual component that will write the state to disk periodically.\n//\n// No one wants to lose their achievement progress ;)\n//\nexport const PersistState = ({\n  interval = 3,\n}: Props) => {\n  const {state} = useAppState()\n  const ticks = events.ticks(state)\n\n  React.useEffect(() => {\n    if (ticks && (ticks % interval === 0)) {\n      window.localStorage['jwo-achievements'] = JSON.stringify(state)\n    }\n  }, [state, ticks, interval])\n\n  return (\n    <div />\n  )\n}\n\nexport default PersistState\n","import Achievements from 'achievements/Achievements'\nimport Achievement from 'achievements/Achievement'\nimport AppStateView from 'achievements/AppStateView'\nimport EventListener from 'achievements/EventListener'\nimport Notifier from 'achievements/Notifier'\nimport PersistState from 'achievements/PersistState'\nimport {AppState, reducer} from 'achievements/state'\nimport * as achievements from 'achievements/state/achievements'\nimport React from 'react'\n\n//\n// Root component for the achievements application.\n//\n// All top level components should be defined here and this component is\n// assumed to be `ReactDOM.render`ed in another component.\n//\n// This component gets wrapped in a mount function and exported in the module\n// `index.js`.\n//\nexport const App = () => {\n  let initialState\n  try {\n    // See PersistState for how the data gets saved.\n    initialState = JSON.parse(window.localStorage['jwo-achievements'] || '{}')\n  } catch (err) {\n    console.warn('Could not read value stored for achievements state. Reverting to empty initial state.')\n    initialState = {}\n  }\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n\n  // We show two different views depending on whether the first achievement has\n  // been unlocked or not.\n  const unlockAchievements = achievements.isAchieved(state, achievements.IDS.UNLOCK_ACHIEVEMENTS)\n  const unlockAchievementsProgress = achievements.unlockAchievementsProgress(state)\n\n  const clickingForCookiesAchieved = achievements.isAchieved(state, achievements.IDS.CLICKING_FOR_COOKIES)\n\n  return (\n    <AppState.Provider value={{state, dispatch}}>\n      <EventListener />\n      <AppStateView />\n      <PersistState />\n      <Notifier />\n      {/*\n        Extra cookie award. Since the drawer is fixed position, this needs to\n        be outside of it.\n      */}\n      {\n        clickingForCookiesAchieved ?\n          <a href='https://orteil.dashnet.org/cookieclicker/' rel='external noopener noreferrer' target='_blank' title='go click some cookies'>\n            <img\n              alt='cookie'\n              src='cookie-for-clicking.png'\n              style={{\n                height: 243, // original height = 487\n                position: 'absolute',\n                right: 15,\n                top: 200,\n                width: 250, // original width = 500\n                zIndex: -1,\n              }}\n            />\n          </a>\n          :\n          null\n      }\n      <div\n        style={{\n          bottom: 0,\n          left: 0,\n          position: 'fixed',\n          // The components manage their achievability, so they need to be\n          // mounted in the page (display: none no workee).\n          visibility: unlockAchievements ? 'visible' : 'hidden',\n          width: '100%',\n        }}\n      >\n        <Achievement.Drawer>\n          <Achievements.UnlockAchievements />\n          <Achievements.StayinAlive />\n          <Achievements.WebCrawler />\n          <Achievements.ClickingForCookies />\n        </Achievement.Drawer>\n      </div>\n      <div\n        style={{\n          bottom: 0,\n          display: unlockAchievements ? 'none' : 'block',\n          left: 0,\n          position: 'fixed',\n          width: '100%',\n        }}\n      >\n        {/*\n          When the achievements have not been unlocked, show a progress bar at\n          the bottom of the screen to hint that something is happening.\n\n          When the achievements are unlocked, hide the progress bar and show the\n          achievements drawer.\n        */}\n        {unlockAchievements ? null : <Achievement.Layout.ProgressBar progress={unlockAchievementsProgress} />}\n      </div>\n    </AppState.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'achievements/App'\n\n//\n// int main(void) for the achievements application.\n// Import and run.\n//\nexport const main = ({\n  rootId = 'achievements'\n} = {}) => {\n  let root = document.getElementById(rootId)\n\n  if (!root) {\n    root = document.createElement('div')\n    root.id = rootId\n    document.body.appendChild(root)\n  }\n\n  ReactDOM.render(\n    <App />,\n    root\n  )\n}\n\nexport default main\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--4-1!../../../../node_modules/postcss-loader/src/index.js??postcss!./AppStateView.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".uLjP1nauJDLcyXLiSllbh {\\n  /** This location is just a guess. Restyle if needed. */\\n  position: fixed;\\n  right: 0;\\n  top: 0;\\n  padding: 1rem;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"container\": \"uLjP1nauJDLcyXLiSllbh\"\n};","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--4-1!../../../../node_modules/postcss-loader/src/index.js??postcss!./Notification.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"._1oz1EPnKamj2WWYfTu3caT {\\n  -webkit-box-align: center;\\n          align-items: center;\\n  box-sizing: border-box;\\n\\n  display: -webkit-box;\\n\\n  display: flex;\\n  justify-content: space-around;\\n  padding: 1em;\\n\\n  position: fixed;\\n  top: 1em;\\n  left: 3em;\\n  right: 3em;\\n}\\n\\n/* Styling for specific notification types. */\\n._1oz1EPnKamj2WWYfTu3caT._27nY54s99pym6p_Lj6VeM- {\\n  background-color: #e6d963;\\n  color: black;\\n}\\n._1oz1EPnKamj2WWYfTu3caT.J_mM_4iinPGx217iBIn7n {\\n  background-color: #c51162;\\n  color: white;\\n}\\n\\n@media (max-width: 768px) {\\n  ._1oz1EPnKamj2WWYfTu3caT {\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n}\\n\\n._3JiSC0xqNs914ukxV_WK1Y {\\n  width: 80%;\\n}\\n\\n._2jNLAHJdVuBWFSxl-XW6Yt {\\n  /* Button reset */\\n  border: none;\\n  margin: 0;\\n  /* padding: 0; */\\n  width: auto;\\n  overflow: visible;\\n  background: transparent;\\n  /* inherit font & color from ancestor */\\n  color: inherit;\\n  font: inherit;\\n  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */\\n  line-height: normal;\\n  /* Corrects font smoothing for webkit */\\n  -webkit-font-smoothing: inherit;\\n  -moz-osx-font-smoothing: inherit;\\n  /* Corrects inability to style clickable `input` types in iOS */\\n  -webkit-appearance: none;\\n  /* end Button reset */\\n\\n  color: #575757;\\n  display: inline-block;\\n  font-family: sans-serif;\\n  font-weight: bold;\\n  font-size: 0.8em;\\n  padding: 0.3em;\\n  text-transform: uppercase;\\n  max-width: 20%;\\n}\\n\\n.J_mM_4iinPGx217iBIn7n ._2jNLAHJdVuBWFSxl-XW6Yt {\\n  color: white;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"notification\": \"_1oz1EPnKamj2WWYfTu3caT\",\n\t\"info\": \"_27nY54s99pym6p_Lj6VeM-\",\n\t\"error\": \"J_mM_4iinPGx217iBIn7n\",\n\t\"message\": \"_3JiSC0xqNs914ukxV_WK1Y\",\n\t\"close\": \"_2jNLAHJdVuBWFSxl-XW6Yt\"\n};","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--4-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./Drawer.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".Uw8D0Ody-RAVwTelXpZl0 {\\n  -webkit-box-align: center;\\n          align-items: center;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  /* This is achievement specific, not a very generalized drawer. */\\n  min-height: 9rem;\\n  position: relative;\\n  -webkit-transition: width 0.25s ease-out;\\n  transition: width 0.25s ease-out;\\n  width: 0;\\n}\\n\\n.Uw8D0Ody-RAVwTelXpZl0._2I-uzjJZT65vQKUw_sk93s {\\n  width: 100%;\\n}\\n\\n._3xRf-zpxwi3eRPt1GFIetV {\\n  display: -webkit-box;\\n  display: flex;\\n  overflow-x: scroll;\\n  -webkit-transition: width 0.25s ease-out;\\n  transition: width 0.25s ease-out;\\n  width: 0;\\n}\\n\\n._3xRf-zpxwi3eRPt1GFIetV._2I-uzjJZT65vQKUw_sk93s {\\n  width: 100%;\\n}\\n\\n/* When !open, button is edged into view on the left side from the closed drawer. */\\n._3taC9g-6LqQ3KKt37JOWNc {\\n  -webkit-box-align: center;\\n          align-items: center;\\n  background-color: rgb(33,33,33);\\n  border-radius: 0 100% 100% 0;\\n  color: rgb(255,255,255);\\n  display: -webkit-box;\\n  display: flex;\\n  height: 4.6rem;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  right: -2.83rem; /* Visible relative to width of button. */\\n  position: absolute;\\n  width: 2.83rem;\\n}\\n._3taC9g-6LqQ3KKt37JOWNc._2I-uzjJZT65vQKUw_sk93s {\\n  border-radius: 100% 0 0 100%;\\n  position: static;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"container\": \"Uw8D0Ody-RAVwTelXpZl0\",\n\t\"open\": \"_2I-uzjJZT65vQKUw_sk93s\",\n\t\"content\": \"_3xRf-zpxwi3eRPt1GFIetV\",\n\t\"button\": \"_3taC9g-6LqQ3KKt37JOWNc\"\n};"],"sourceRoot":""}